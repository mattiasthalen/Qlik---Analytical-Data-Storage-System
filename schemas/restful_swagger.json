{
  "openapi": "3.0.1",
  "info": {
    "title": "AdventureWorks Data Service Restful API",
    "description": "AdventureWorks Data Service Restful API.",
    "version": "1.0"
  },
  "paths": {
    "/adventureworks/api/v1/addresses/{addressId}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Returns Paginated Addresses data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addresses/{addressId}/businessEntityAddresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addresses/{addressId}/province": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addresses/{addressId}/ordersBilledTo": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addresses/{addressId}/ordersShippedTo": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addressTypes/{addressTypeId}": {
      "get": {
        "tags": [
          "AddressTypes"
        ],
        "parameters": [
          {
            "name": "addressTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addressTypes": {
      "get": {
        "tags": [
          "AddressTypes"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressTypeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressTypeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressTypeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/addressTypes/{addressTypeId}/businessEntityAddresses": {
      "get": {
        "tags": [
          "AddressTypes"
        ],
        "parameters": [
          {
            "name": "addressTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/billOfMaterials/{billId}": {
      "get": {
        "tags": [
          "BillOfMaterials"
        ],
        "parameters": [
          {
            "name": "billId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterialDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterialDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterialDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/billOfMaterials": {
      "get": {
        "tags": [
          "BillOfMaterials"
        ],
        "summary": "Returns Paginated Bill of materials data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/billOfMaterials/{billId}/component": {
      "get": {
        "tags": [
          "BillOfMaterials"
        ],
        "parameters": [
          {
            "name": "billId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/billOfMaterials/{billId}/parentProduct": {
      "get": {
        "tags": [
          "BillOfMaterials"
        ],
        "parameters": [
          {
            "name": "billId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/billOfMaterials/{billId}/measureUnit": {
      "get": {
        "tags": [
          "BillOfMaterials"
        ],
        "parameters": [
          {
            "name": "billId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntity/{entityId}/addresses": {
      "get": {
        "tags": [
          "BusinessEntities"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntity/{entityId}/businessContacts": {
      "get": {
        "tags": [
          "BusinessEntities"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntity/{entityId}/person": {
      "get": {
        "tags": [
          "BusinessEntities"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntity/{entityId}/store": {
      "get": {
        "tags": [
          "BusinessEntities"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntity/{entityId}/vendor": {
      "get": {
        "tags": [
          "BusinessEntities"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntityAddresses": {
      "get": {
        "tags": [
          "BusinessEntityAddresses"
        ],
        "summary": "Returns Paginated Business entity addresses data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/businessEntityContacts": {
      "get": {
        "tags": [
          "BusinessEntityContacts"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/contactTypes": {
      "get": {
        "tags": [
          "ContactTypes"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/contactTypes/{typeId}": {
      "get": {
        "tags": [
          "ContactTypes"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/contactTypes/{typeId}/businessContacts": {
      "get": {
        "tags": [
          "ContactTypes"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/{countryCode}/details": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/{countryCode}": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/countryNames": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/{countryCode}/currencies": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/{countryCode}/salesTerritories": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/countries/{countryCode}/stateProvinces": {
      "get": {
        "tags": [
          "CountryRegions"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/creditCards": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Returns Paginated Credit cards data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/creditCards/{id}": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/creditCards/{id}/persons": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/creditCards/{id}/salesOrders": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/cultures/{cultureId}": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "parameters": [
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/cultures": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CultureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CultureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CultureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/cultures/default": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/cultures/{cultureId}/productModelDescriptions": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "parameters": [
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencies/{code}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencies/{code}/countries": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryRegionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencies/{fromCurrencyCode}/conversionRates": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Returns Paginated Currency conversion rates data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "fromCurrencyCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencyRates": {
      "get": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Returns Paginated Currency rates data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "fromCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "toCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencyRates/{id}": {
      "get": {
        "tags": [
          "CurrencyRates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/currencyRates/{id}/salesOrders": {
      "get": {
        "tags": [
          "CurrencyRates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns Paginated Customers data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}/details": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}/person": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}/store": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}/territory": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/customers/{id}/salesOrders": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/departments/{id}/employees": {
      "get": {
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/emails": {
      "get": {
        "tags": [
          "EmailAddresses"
        ],
        "summary": "Returns Paginated Email addresses data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/emails/{email}/person": {
      "get": {
        "tags": [
          "EmailAddresses"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Returns Paginated Employees data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/departmentHistories/{departmentId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/departmentHistories": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDepartmentHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/payHistories": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/jobApplications": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/personalDetails": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/purchaseOrders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/employees/{employeeId}/sales": {
      "get": {
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/illustrations/{illustrationId}": {
      "get": {
        "tags": [
          "Illustrations"
        ],
        "parameters": [
          {
            "name": "illustrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/illustrations": {
      "get": {
        "tags": [
          "Illustrations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IllustrationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IllustrationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IllustrationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/illustrations/{illustrationId}/productModelIllustrations": {
      "get": {
        "tags": [
          "Illustrations"
        ],
        "parameters": [
          {
            "name": "illustrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/jobCandidates": {
      "get": {
        "tags": [
          "JobCandidates"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCandidateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/jobCandidates/{candidateId}": {
      "get": {
        "tags": [
          "JobCandidates"
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobCandidateDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobCandidateDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobCandidateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/jobCandidates/{candidateId}/employee": {
      "get": {
        "tags": [
          "JobCandidates"
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/locations/{locationId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/locations/{locationId}/productInventories": {
      "get": {
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/locations/{locationId}/workOrderRoutings": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns Paginated WorkOrderRoutings data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumbers/{phoneNumber}/person": {
      "get": {
        "tags": [
          "PersonPhones"
        ],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumbers": {
      "get": {
        "tags": [
          "PersonPhones"
        ],
        "summary": "Returns Paginated Phone numbers data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumbers/{phoneNumber}/type": {
      "get": {
        "tags": [
          "PersonPhones"
        ],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/businessContacts": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessEntityContactDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/creditCards": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/customers": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/demographics": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/emails": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailAddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/employee": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/password": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Returns Paginated Persons data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/{personId}/phones": {
      "get": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/persons/types": {
      "get": {
        "tags": [
          "Persons"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumberTypes/{typeId}": {
      "get": {
        "tags": [
          "PhoneNumberTypes"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumberTypes": {
      "get": {
        "tags": [
          "PhoneNumberTypes"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberTypeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/phoneNumberTypes/{typeId}/phones": {
      "get": {
        "tags": [
          "PhoneNumberTypes"
        ],
        "summary": "Returns Paginated PersonPhones data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonPhoneDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCategories": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCategories/{categoryId}": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCategories/{categoryId}/products": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCategories/{categoryId}/subCategories": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCategories/{categoryId}/subCategories/{subcategoryId}/products": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCostHistories": {
      "get": {
        "tags": [
          "ProductCostHistories"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCostHistories/{productId}": {
      "get": {
        "tags": [
          "ProductCostHistories"
        ],
        "summary": "Gets ProductCostHistories by productId and startDate.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Id of product for which product cost histories will be fetched.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id of product for which product cost histories will be fetched.",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "This date will be used to fetch all product cost histories where startdate value matches or is greater than the provided value.",
            "schema": {
              "type": "string",
              "description": "This date will be used to fetch all product cost histories where startdate value matches or is greater than the provided value.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productCostHistories/{productId}/product": {
      "get": {
        "tags": [
          "ProductCostHistories"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productDescriptions/{descriptionId}": {
      "get": {
        "tags": [
          "ProductDescriptions"
        ],
        "parameters": [
          {
            "name": "descriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productDescriptions": {
      "get": {
        "tags": [
          "ProductDescriptions"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productInventories/location": {
      "get": {
        "tags": [
          "ProductInventories"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productInventories/product": {
      "get": {
        "tags": [
          "ProductInventories"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productInventories": {
      "get": {
        "tags": [
          "ProductInventories"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productPriceHistories/{productId}/product": {
      "get": {
        "tags": [
          "ProductListPriceHistories"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productPriceHistories": {
      "get": {
        "tags": [
          "ProductListPriceHistories"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productPriceHistories/{productId}": {
      "get": {
        "tags": [
          "ProductListPriceHistories"
        ],
        "summary": "Gets ProductPriceHistories by productId and startDate",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Id of product for which product price histories will be fetched.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id of product for which product price histories will be fetched.",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "This date will be used to fetch all product price histories where startdate value matches or is greater than the provided value.",
            "schema": {
              "type": "string",
              "description": "This date will be used to fetch all product price histories where startdate value matches or is greater than the provided value.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModelIllustrations/illustration": {
      "get": {
        "tags": [
          "ProductModelIllustrations"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "illustrationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllustrationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModelIllustrations/model": {
      "get": {
        "tags": [
          "ProductModelIllustrations"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "illustrationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModelIllustrations": {
      "get": {
        "tags": [
          "ProductModelIllustrations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelIllustrationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModels/{modelId}": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModels/{modelId}/descriptions": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDescriptionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModels/{modelId}/descriptions/{cultureId}": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDescriptionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productModels": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductModelDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productPhotos/{photoId}": {
      "get": {
        "tags": [
          "ProductPhotos"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPhotoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPhotoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPhotoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productPhotos": {
      "get": {
        "tags": [
          "ProductPhotos"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productReviews/{reviewId}/product": {
      "get": {
        "tags": [
          "ProductReviews"
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productReviews/{reviewId}": {
      "get": {
        "tags": [
          "ProductReviews"
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productReviews": {
      "get": {
        "tags": [
          "ProductReviews"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productNumber}": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/productAssemblies": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/components": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/costHistories": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCostHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/details": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/inventories": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInventoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/model": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/offers": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/photos": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPhotoDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/priceHistories": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/reviews": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductReviewDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns Paginated Products data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/sizeUnit": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/subCategory": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/transactions": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/vendors": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/weightUnit": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/products/{productId}/workOrders": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productSubcategories/{subcategoryId}/category": {
      "get": {
        "tags": [
          "ProductSubcategories"
        ],
        "parameters": [
          {
            "name": "subcategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productSubcategories/{subcategoryId}/products": {
      "get": {
        "tags": [
          "ProductSubcategories"
        ],
        "parameters": [
          {
            "name": "subcategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productSubcategories": {
      "get": {
        "tags": [
          "ProductSubcategories"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productSubcategories/{subcategoryId}": {
      "get": {
        "tags": [
          "ProductSubcategories"
        ],
        "parameters": [
          {
            "name": "subcategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors/product": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors/vendor": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors/{productId}/vendors": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors/{vendorId}/products": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/productVendors/measureUnit": {
      "get": {
        "tags": [
          "ProductVendors"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrderDetails": {
      "get": {
        "tags": [
          "PurchaseOrderDetails"
        ],
        "summary": "Returns Paginated Purchase order details data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrderDetails/{detailId}": {
      "get": {
        "tags": [
          "PurchaseOrderDetails"
        ],
        "parameters": [
          {
            "name": "detailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrderDetails/{detailId}/purchaseOrder": {
      "get": {
        "tags": [
          "PurchaseOrderDetails"
        ],
        "parameters": [
          {
            "name": "detailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrderDetails/{detailId}/product": {
      "get": {
        "tags": [
          "PurchaseOrderDetails"
        ],
        "parameters": [
          {
            "name": "detailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "summary": "Returns Paginated Purchase Orders data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders/{id}/creator": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders/{id}/shippingDetail": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders/{id}/vendor": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/purchaseOrders/{id}/details": {
      "get": {
        "tags": [
          "PurchaseOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrderDetails": {
      "get": {
        "tags": [
          "SalesOrderDetails"
        ],
        "summary": "Returns Paginated Sales Order Details. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrderDetails/{id}": {
      "get": {
        "tags": [
          "SalesOrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrderDetails/{id}/order": {
      "get": {
        "tags": [
          "SalesOrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrderDetails/{id}/specialOffer": {
      "get": {
        "tags": [
          "SalesOrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "summary": "Returns Paginated Sales Order data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/details": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderHeaderDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/billedToAddress": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/shippedToAddress": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/creditCard": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/currencyRate": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/customer": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/salesPerson": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/shippingMethod": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/territory": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/orderDetails": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderDetailDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesOrders/{id}/salesReasons": {
      "get": {
        "tags": [
          "SalesOrderHeaders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersonQuotaHistories": {
      "get": {
        "tags": [
          "SalesPersonQuotaHistories"
        ],
        "summary": "Gets the SalesPersonQuotaHistories by salesPersonId and quotaDate",
        "parameters": [
          {
            "name": "salesPersonId",
            "in": "query",
            "description": "Id of sales person whose quota history will be fetched.",
            "schema": {
              "type": "integer",
              "description": "Id of sales person whose quota history will be fetched.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "quotaDate",
            "in": "query",
            "description": "This date will be used to fetch sales person quota histories where quotaDate matched with the provided value.",
            "schema": {
              "type": "string",
              "description": "This date will be used to fetch sales person quota histories where quotaDate matched with the provided value.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersonQuotaHistories/{salesPersonId}": {
      "get": {
        "tags": [
          "SalesPersonQuotaHistories"
        ],
        "parameters": [
          {
            "name": "salesPersonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/employee": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/territory": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/salesOrders": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/quotaHistories": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonQuotaHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/territoryHistories": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesPersons/{id}/stores": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesReasons/{salesReasonId}/salesOrders": {
      "get": {
        "tags": [
          "SalesReasons"
        ],
        "summary": "Returns Paginated Sales Order data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "salesReasonId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesReasons/{salesReasonId}": {
      "get": {
        "tags": [
          "SalesReasons"
        ],
        "parameters": [
          {
            "name": "salesReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReasonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReasonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReasonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesReasons": {
      "get": {
        "tags": [
          "SalesReasons"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReasonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTaxRates/{taxRateId}": {
      "get": {
        "tags": [
          "SalesTaxRates"
        ],
        "parameters": [
          {
            "name": "taxRateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTaxRateDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTaxRateDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTaxRateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTaxRates": {
      "get": {
        "tags": [
          "SalesTaxRates"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTaxRateDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTaxRateDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTaxRateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTaxRates/{taxRateId}/province": {
      "get": {
        "tags": [
          "SalesTaxRates"
        ],
        "parameters": [
          {
            "name": "taxRateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/country": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/customers": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/salesOrders": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/salesPeople": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/territoryHistories": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritories/{territoryId}/provinces": {
      "get": {
        "tags": [
          "SalesTerritories"
        ],
        "parameters": [
          {
            "name": "territoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/salesTerritoryHistories": {
      "get": {
        "tags": [
          "SalesTerritoryHistories"
        ],
        "summary": "Gets the SalesTerritoryHistories by salesPersonId, TerritoryId and startDate.",
        "parameters": [
          {
            "name": "salesPersonid",
            "in": "query",
            "description": "Id of sales person for which sales territory histories will be fetched.",
            "schema": {
              "type": "integer",
              "description": "Id of sales person for which sales territory histories will be fetched.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "territoryId",
            "in": "query",
            "description": "Id of sales territory for which histories will be fetched.",
            "schema": {
              "type": "integer",
              "description": "Id of sales territory for which histories will be fetched.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "This date will be used to fetch sales territory histories where startDate matches or is greater than the provided value.",
            "schema": {
              "type": "string",
              "description": "This date will be used to fetch sales territory histories where startDate matches or is greater than the provided value.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTerritoryHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/scrapReasons/{scrapReasonId}": {
      "get": {
        "tags": [
          "ScrapReasons"
        ],
        "parameters": [
          {
            "name": "scrapReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/scrapReasons": {
      "get": {
        "tags": [
          "ScrapReasons"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScrapReasonDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScrapReasonDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScrapReasonDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/scrapReasons/{scrapReasonId}/workOrders": {
      "get": {
        "tags": [
          "ScrapReasons"
        ],
        "parameters": [
          {
            "name": "scrapReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShiftDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShiftDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShiftDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shifts/{shiftId}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shippingMethods": {
      "get": {
        "tags": [
          "ShipMethods"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipMethodDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipMethodDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipMethodDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shippingMethods/{id}": {
      "get": {
        "tags": [
          "ShipMethods"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipMethodDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shippingMethods/{id}/purchaseOrders": {
      "get": {
        "tags": [
          "ShipMethods"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shippingMethods/{id}/salesOrders": {
      "get": {
        "tags": [
          "ShipMethods"
        ],
        "summary": "Returns Paginated Currency conversion rates data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shoppingCartItems/{cartItemId}/product": {
      "get": {
        "tags": [
          "ShoppingCartItems"
        ],
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shoppingCartItems/cart/{cartId}": {
      "get": {
        "tags": [
          "ShoppingCartItems"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shoppingCartItems/{cartItemId}": {
      "get": {
        "tags": [
          "ShoppingCartItems"
        ],
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCartItemDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/shoppingCartItems": {
      "get": {
        "tags": [
          "ShoppingCartItems"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingCartItemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingCartItemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingCartItemDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/specialOffers/{offerId}/products": {
      "get": {
        "tags": [
          "SpecialOffers"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/specialOffers/{offerId}": {
      "get": {
        "tags": [
          "SpecialOffers"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/specialOffers": {
      "get": {
        "tags": [
          "SpecialOffers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialOfferDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/{provinceCode}/addresses": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "parameters": [
          {
            "name": "provinceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/{provinceCode}/country": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "parameters": [
          {
            "name": "provinceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryRegionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/{provinceId}": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/{provinceCode}": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "parameters": [
          {
            "name": "provinceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateProvinceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/provinceNames": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateProvinceDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/provinces/{provinceCode}/territory": {
      "get": {
        "tags": [
          "StateProvinces"
        ],
        "parameters": [
          {
            "name": "provinceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTerritoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/stores/{storeId}/businessEntity": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/stores/{storeId}/customers": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/stores/{storeId}/salesPerson": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/stores/{storeId}": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/transactionHistories/{transactionId}/product": {
      "get": {
        "tags": [
          "TransactionHistories"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/transactionHistories": {
      "get": {
        "tags": [
          "TransactionHistories"
        ],
        "summary": "Returns Paginated Transaction History data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/transactionHistories/{transactionId}": {
      "get": {
        "tags": [
          "TransactionHistories"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/transactionHistoryArchives/{transactionId}": {
      "get": {
        "tags": [
          "TransactionHistoryArchives"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/transactionHistoryArchives": {
      "get": {
        "tags": [
          "TransactionHistoryArchives"
        ],
        "summary": "Returns Paginated Transaction History Archives data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures/{measureCode}/billOfMaterials": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "summary": "Returns Paginated Bills of materials data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "measureCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterialDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures/{measureCode}/productSizeUnits": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "parameters": [
          {
            "name": "measureCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures/{measureCode}/productVendors": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "parameters": [
          {
            "name": "measureCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures/{measureCode}/productWeightUnits": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "parameters": [
          {
            "name": "measureCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures/{measureCode}": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "parameters": [
          {
            "name": "measureCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/unitMeasures": {
      "get": {
        "tags": [
          "UnitMeasures"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasureDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors/{id}/details": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors/{id}/entityDetails": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessEntityDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors/{id}/productVendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVendorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/vendors/{id}/purchaseOrders": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrderRoutings/location": {
      "get": {
        "tags": [
          "WorkOrderRoutings"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "operationSequence",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrderRoutings/workOrder": {
      "get": {
        "tags": [
          "WorkOrderRoutings"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "operationSequence",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrderRoutings": {
      "get": {
        "tags": [
          "WorkOrderRoutings"
        ],
        "summary": "Returns Paginated Work Order Routing data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "operationSequence",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrders/{workOrderId}/product": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrders/{workOrderId}/scrapReason": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapReasonDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrders/{workOrderId}": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOrderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrders/{workOrderId}/workOrderRoutings": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderRoutingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adventureworks/api/v1/workOrders": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Returns Paginated Work Orders data. Check 'X-Pagination' response header for paging details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or sets the Page number to return records. Default = 1.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
            "schema": {
              "type": "integer",
              "description": "Gets or Sets the page size to return records. Default = 100, Max = 500.\r\nInvalid values (e.g. -1) will fallback to use the Default value.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkOrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressDTO": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Primary key for Address records.",
            "format": "int32"
          },
          "addressLine1": {
            "type": "string",
            "description": "First street address line.",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "Second street address line.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Name of the city.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State or province details from StateProvince table.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code for the street address.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Street address information for customers, employees, and vendors."
      },
      "BusinessEntityAddressDTO": {
        "type": "object",
        "properties": {
          "businessEntityId": {
            "type": "integer",
            "description": "Primary key. Foreign key to BusinessEntity.BusinessEntityID.",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "description": "Based on Foreign key to Address.AddressID.",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "description": "Based on Foreign key to AddressType.AddressTypeID.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Cross-reference table mapping customers, vendors, and employees to their addresses."
      },
      "StateProvinceDTO": {
        "type": "object",
        "properties": {
          "stateProvinceId": {
            "type": "integer",
            "description": "Primary key for StateProvince records.",
            "format": "int32"
          },
          "stateProvinceCode": {
            "type": "string",
            "description": "ISO standard state or province code.",
            "nullable": true
          },
          "stateProvinceCodeUnavailable": {
            "type": "boolean",
            "description": "0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "State or province description.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "ISO standard country or region code.",
            "nullable": true
          },
          "territory": {
            "type": "string",
            "description": "ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "State and province lookup table."
      },
      "SalesOrderHeaderDTO": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Primary key.",
            "format": "int32"
          },
          "revisionNumber": {
            "type": "integer",
            "description": "Incremental number to track changes to the sales order over time.",
            "format": "int32"
          },
          "orderDate": {
            "type": "string",
            "description": "Dates the sales order was created.",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "description": "Date the order is due to the customer.",
            "format": "date-time"
          },
          "shipDate": {
            "type": "string",
            "description": "Date the order was shipped to the customer.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled",
            "nullable": true
          },
          "isOrderedOnline": {
            "type": "boolean",
            "description": "0 = Order placed by sales person. 1 = Order placed online by customer.",
            "nullable": true
          },
          "salesOrderNumber": {
            "type": "string",
            "description": "Unique sales order identification number.",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Customer purchase order number reference.",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "Financial accounting number reference.",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Customer identification number. Foreign key to Customer.BusinessEntityID.",
            "format": "int32"
          },
          "salesPersonId": {
            "type": "integer",
            "description": "Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.",
            "format": "int32",
            "nullable": true
          },
          "territory": {
            "type": "string",
            "description": "Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.",
            "nullable": true
          },
          "billToAddress": {
            "type": "string",
            "description": "Customer billing address. Foreign key to Address.AddressID.",
            "nullable": true
          },
          "shipToAddress": {
            "type": "string",
            "description": "Customer shipping address. Foreign key to Address.AddressID.",
            "nullable": true
          },
          "shipMethod": {
            "type": "string",
            "description": "Shipping method. Foreign key to ShipMethod.ShipMethodID.",
            "nullable": true
          },
          "creditCardId": {
            "type": "integer",
            "description": "Credit card identification number. Foreign key to CreditCard.CreditCardID.",
            "format": "int32",
            "nullable": true
          },
          "creditCardApprovalCode": {
            "type": "string",
            "description": "Approval code provided by the credit card company.",
            "nullable": true
          },
          "currencyRateId": {
            "type": "integer",
            "description": "Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.",
            "format": "int32",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "description": "Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "description": "Tax amount.",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Shipping cost.",
            "format": "double"
          },
          "totalDue": {
            "type": "number",
            "description": "Total due from customer. Computed as Subtotal + TaxAmt + Freight.",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "description": "Sales representative comments.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "General sales order information."
      },
      "AddressTypeDTO": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "description": "Primary key for AddressType records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Address type description. For example, Billing, Home, or Shipping.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Types of addresses stored in the Address table."
      },
      "BillOfMaterialDTO": {
        "type": "object",
        "properties": {
          "billOfMaterialsId": {
            "type": "integer",
            "description": "Primary key for BillOfMaterials records.",
            "format": "int32"
          },
          "productAssemblyId": {
            "type": "integer",
            "description": "Parent product identification number.",
            "format": "int32",
            "nullable": true
          },
          "componentId": {
            "type": "integer",
            "description": "Component identification number.",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Date the component started being used in the assembly item.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Date the component stopped being used in the assembly item.",
            "format": "date-time",
            "nullable": true
          },
          "measurementUnit": {
            "type": "string",
            "description": "Standard code identifying the unit of measure for the quantity.",
            "nullable": true
          },
          "bomlevel": {
            "type": "integer",
            "description": "Indicates the depth the component is from its parent (AssemblyID).",
            "format": "int32"
          },
          "perAssemblyQuantity": {
            "type": "number",
            "description": "Quantity of the component needed to create the assembly.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components."
      },
      "ProductDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Primary key for Product records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the product.",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "Unique product identification number.",
            "nullable": true
          },
          "isManufactured": {
            "type": "boolean",
            "description": "0 = Product is purchased, 1 = Product is manufactured in-house.",
            "nullable": true
          },
          "isSaleable": {
            "type": "boolean",
            "description": "0 = Product is not a salable item. 1 = Product is salable.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Product color.",
            "nullable": true
          },
          "safetyStockLevel": {
            "type": "integer",
            "description": "Minimum inventory quantity.",
            "format": "int32"
          },
          "reorderPoint": {
            "type": "integer",
            "description": "Inventory level that triggers a purchase order or work order.",
            "format": "int32"
          },
          "standardCost": {
            "type": "number",
            "description": "Standard cost of the product.",
            "format": "double"
          },
          "listPrice": {
            "type": "number",
            "description": "Selling price.",
            "format": "double"
          },
          "size": {
            "type": "string",
            "description": "Product size.",
            "nullable": true
          },
          "sizeUnit": {
            "type": "string",
            "description": "Unit of measure for Size column.",
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "description": "Unit of measure for Weight column.",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Product weight.",
            "format": "double",
            "nullable": true
          },
          "daysToManufacture": {
            "type": "integer",
            "description": "Number of days required to manufacture the product.",
            "format": "int32"
          },
          "productLine": {
            "type": "string",
            "description": "R = Road, M = Mountain, T = Touring, S = Standard",
            "nullable": true
          },
          "class": {
            "type": "string",
            "description": "H = High, M = Medium, L = Low",
            "nullable": true
          },
          "style": {
            "type": "string",
            "description": "W = Womens, M = Mens, U = Universal",
            "nullable": true
          },
          "subcategory": {
            "type": "string",
            "description": "Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "Product is a member of this product model. Foreign key to ProductModel.ProductModelID.",
            "nullable": true
          },
          "sellStartDate": {
            "type": "string",
            "description": "Date the product was available for sale.",
            "format": "date-time"
          },
          "sellEndDate": {
            "type": "string",
            "description": "Date the product was no longer available for sale.",
            "format": "date-time",
            "nullable": true
          },
          "discontinuedDate": {
            "type": "string",
            "description": "Date the product was discontinued.",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Products sold or used in the manfacturing of sold products."
      },
      "UnitMeasureDTO": {
        "type": "object",
        "properties": {
          "unitMeasureCode": {
            "type": "string",
            "description": "Primary key.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Unit of measure description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Unit of measure lookup table."
      },
      "BusinessEntityContactDTO": {
        "type": "object",
        "properties": {
          "businessEntityId": {
            "type": "integer",
            "description": "Primary key. Foreign key to BusinessEntity.BusinessEntityID.",
            "format": "int32"
          },
          "personId": {
            "type": "integer",
            "format": "int32"
          },
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Cross-reference table mapping stores, vendors, and employees to people"
      },
      "PersonDTO": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "description": "Primary key for Person records.",
            "format": "int32"
          },
          "personType": {
            "type": "string",
            "description": "Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact",
            "nullable": true
          },
          "nameStyle": {
            "type": "string",
            "description": "0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A courtesy title. For example, Mr. or Ms.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name of the person.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Middle name or middle initial of the person.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the person.",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "description": "Surname suffix. For example, Sr. or Jr.",
            "nullable": true
          },
          "emailPromotion": {
            "type": "string",
            "description": "0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners.",
            "nullable": true
          },
          "additionalContactInfo": {
            "type": "string",
            "description": "Additional contact information about the person stored in xml format.",
            "nullable": true
          },
          "demographics": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts."
      },
      "StoreDTO": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "integer",
            "description": "Primary key. Foreign key to Customer.BusinessEntityID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the store.",
            "nullable": true
          },
          "salesPersonId": {
            "type": "integer",
            "description": "ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.",
            "format": "int32",
            "nullable": true
          },
          "demographics": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Demographic informationg about the store such as the number of employees, annual sales and store type.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Customers (resellers) of Adventure Works products."
      },
      "VendorDTO": {
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "integer",
            "description": "Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string",
            "description": "Vendor account (identification) number.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true
          },
          "creditRating": {
            "type": "string",
            "description": "1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average",
            "nullable": true
          },
          "isPreferred": {
            "type": "boolean",
            "description": "0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "0 = Vendor no longer used. 1 = Vendor is actively used.",
            "nullable": true
          },
          "purchasingWebServiceUrl": {
            "type": "string",
            "description": "Vendor URL.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Companies from whom Adventure Works Cycles purchases parts or other goods."
      },
      "ContactTypeDTO": {
        "type": "object",
        "properties": {
          "contactTypeId": {
            "type": "integer",
            "description": "Primary key for ContactType records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Contact type description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table containing the types of business entity contacts."
      },
      "CountryRegionDTO": {
        "type": "object",
        "properties": {
          "countryRegionCode": {
            "type": "string",
            "description": "ISO standard code for countries and regions.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Country or region name.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table containing the ISO standard codes for countries and regions."
      },
      "CurrencyDTO": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "The ISO code for the Currency.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Currency name.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table containing standard ISO currencies."
      },
      "SalesTerritoryDTO": {
        "type": "object",
        "properties": {
          "territoryId": {
            "type": "integer",
            "description": "Primary key for SalesTerritory records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Sales territory description",
            "nullable": true
          },
          "countryRegionCode": {
            "type": "string",
            "description": "ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.",
            "nullable": true
          },
          "group": {
            "type": "string",
            "description": "Geographic area to which the sales territory belong.",
            "nullable": true
          },
          "salesYtd": {
            "type": "number",
            "description": "Sales in the territory year to date.",
            "format": "double"
          },
          "salesLastYear": {
            "type": "number",
            "description": "Sales in the territory the previous year.",
            "format": "double"
          },
          "costYtd": {
            "type": "number",
            "description": "Business costs in the territory year to date.",
            "format": "double"
          },
          "costLastYear": {
            "type": "number",
            "description": "Business costs in the territory the previous year.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Sales territory lookup table."
      },
      "CreditCardDTO": {
        "type": "object",
        "properties": {
          "creditCardId": {
            "type": "integer",
            "description": "Primary key for CreditCard records.",
            "format": "int32"
          },
          "cardType": {
            "type": "string",
            "description": "Credit card name.",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "description": "Credit card number.",
            "nullable": true
          },
          "expiryMonth": {
            "type": "integer",
            "description": "Credit card expiration month.",
            "format": "int32"
          },
          "expiryYear": {
            "type": "integer",
            "description": "Credit card expiration year.",
            "format": "int32"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Customer credit card information."
      },
      "CultureDTO": {
        "type": "object",
        "properties": {
          "cultureId": {
            "type": "string",
            "description": "Primary key for Culture records.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Culture description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table containing the languages in which some AdventureWorks data is stored."
      },
      "ProductDescriptionDTO": {
        "type": "object",
        "properties": {
          "productDescriptionId": {
            "type": "integer",
            "description": "Primary key for ProductDescription records.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the product.",
            "nullable": true
          },
          "cultureCode": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product descriptions in several languages."
      },
      "CurrencyRateDTO": {
        "type": "object",
        "properties": {
          "currencyRateId": {
            "type": "integer",
            "description": "Primary key for CurrencyRate records.",
            "format": "int32"
          },
          "currencyRateDate": {
            "type": "string",
            "description": "Date and time the exchange rate was obtained.",
            "format": "date-time"
          },
          "fromCurrencyCode": {
            "type": "string",
            "description": "Exchange rate was converted from this currency code.",
            "nullable": true
          },
          "toCurrencyCode": {
            "type": "string",
            "description": "Exchange rate was converted to this currency code.",
            "nullable": true
          },
          "averageRate": {
            "type": "number",
            "description": "Average exchange rate for the day.",
            "format": "double"
          },
          "endOfDayRate": {
            "type": "number",
            "description": "Final exchange rate for the day.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Currency exchange rates."
      },
      "CustomerDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Primary key.",
            "format": "int32"
          },
          "personId": {
            "type": "integer",
            "description": "Foreign key to Person.BusinessEntityID",
            "format": "int32",
            "nullable": true
          },
          "storeId": {
            "type": "integer",
            "description": "Foreign key to Store.BusinessEntityID",
            "format": "int32",
            "nullable": true
          },
          "territory": {
            "type": "string",
            "description": "ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "Unique number identifying the customer assigned by the accounting system.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Current customer information. Also see the Person and Store tables."
      },
      "CustomerDetailDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Primary key.",
            "format": "int32"
          },
          "person": {
            "$ref": "#/components/schemas/PersonDTO"
          },
          "store": {
            "$ref": "#/components/schemas/StoreDTO"
          },
          "territory": {
            "type": "string",
            "description": "ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "Unique number identifying the customer assigned by the accounting system.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          },
          "salesOrderHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesOrderHeaderDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepartmentDTO": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "description": "Primary key for Department records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the department.",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "description": "Name of the group to which the department belongs.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table containing the departments within the Adventure Works Cycles company."
      },
      "EmployeeDTO": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Primary key for Employee records.",
            "format": "int32"
          },
          "nationalIdnumber": {
            "type": "string",
            "description": "Unique national identification number such as a social security number.",
            "nullable": true
          },
          "loginId": {
            "type": "string",
            "description": "Network login.",
            "nullable": true
          },
          "organizationLevel": {
            "type": "integer",
            "description": "The depth of the employee in the corporate hierarchy.",
            "format": "int32",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "description": "Work title such as Buyer or Sales Representative.",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth.",
            "format": "date-time"
          },
          "maritalStatus": {
            "type": "string",
            "description": "M = Married, S = Single",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "M = Male, F = Female",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "description": "Employee hired on this date.",
            "format": "date-time"
          },
          "isSalaried": {
            "type": "boolean",
            "description": "Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.",
            "nullable": true
          },
          "vacationHours": {
            "type": "integer",
            "description": "Number of available vacation hours.",
            "format": "int32"
          },
          "sickLeaveHours": {
            "type": "integer",
            "description": "Number of available sick leave hours.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "0 = Inactive, 1 = Active",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Employee information such as salary, department, and title."
      },
      "EmailAddressDTO": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "description": "Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID",
            "format": "int32"
          },
          "emailAddressId": {
            "type": "integer",
            "description": "Primary key. ID of this email address.",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "description": "E-mail address for the person.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Where to send a person email."
      },
      "EmployeeDepartmentHistoryDTO": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identification number.",
            "format": "int32"
          },
          "department": {
            "type": "string",
            "description": "Department in which the employee worked including currently.",
            "nullable": true
          },
          "departmentGroup": {
            "type": "string",
            "nullable": true
          },
          "shift": {
            "type": "string",
            "description": "Identifies which 8-hour shift the employee works.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Date the employee started work in the department.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Date the employee left the department. NULL = Current department.",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Employee department transfers."
      },
      "EmployeePayHistoryDTO": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identification number. Foreign key to Employee.BusinessEntityID.",
            "format": "int32"
          },
          "rateChangeDate": {
            "type": "string",
            "description": "Date the change in pay is effective",
            "format": "date-time"
          },
          "rate": {
            "type": "number",
            "description": "Salary hourly rate.",
            "format": "double"
          },
          "payFrequency": {
            "type": "string",
            "description": "1 = Salary received monthly, 2 = Salary received biweekly",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Employee pay history."
      },
      "JobCandidateDTO": {
        "type": "object",
        "properties": {
          "jobCandidateId": {
            "type": "integer",
            "description": "Primary key for JobCandidate records.",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "description": "Employee details if applicant was hired.",
            "format": "int32",
            "nullable": true
          },
          "resume": {
            "type": "string",
            "description": "Résumé in XML format.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Résumés submitted to Human Resources by job applicants."
      },
      "PurchaseOrderHeaderDTO": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "description": "Primary key.",
            "format": "int32"
          },
          "revisionNumber": {
            "type": "integer",
            "description": "Incremental number to track changes to the purchase order over time.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Employee who created the purchase order. Foreign key to Employee.BusinessEntityID.",
            "format": "int32"
          },
          "vendor": {
            "type": "string",
            "description": "Vendor with whom the purchase order is placed. Foreign key to Vendor.BusinessEntityID.",
            "nullable": true
          },
          "shipMethod": {
            "type": "string",
            "description": "Shipping method. Foreign key to ShipMethod.ShipMethodID.",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "description": "Purchase order creation date.",
            "format": "date-time"
          },
          "shipDate": {
            "type": "string",
            "description": "Estimated shipment date from the vendor.",
            "format": "date-time",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "description": "Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "description": "Tax amount.",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Shipping cost.",
            "format": "double"
          },
          "totalDue": {
            "type": "number",
            "description": "Total due to vendor. Computed as Subtotal + TaxAmt + Freight.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "General purchase order information. See PurchaseOrderDetail."
      },
      "IllustrationDTO": {
        "type": "object",
        "properties": {
          "illustrationId": {
            "type": "integer",
            "description": "Primary key for Illustration records.",
            "format": "int32"
          },
          "diagram": {
            "type": "string",
            "description": "Illustrations used in manufacturing instructions. Stored as XML.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Bicycle assembly diagrams."
      },
      "ProductModelIllustrationDTO": {
        "type": "object",
        "properties": {
          "productModelId": {
            "type": "integer",
            "description": "Primary key. Foreign key to ProductModel.ProductModelID.",
            "format": "int32"
          },
          "illustrationId": {
            "type": "integer",
            "description": "Primary key. Foreign key to Illustration.IllustrationID.",
            "format": "int32"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Cross-reference table mapping product models and illustrations."
      },
      "LocationDTO": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Primary key for Location records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Location description.",
            "nullable": true
          },
          "costRate": {
            "type": "number",
            "description": "Standard hourly cost of the manufacturing location.",
            "format": "double"
          },
          "availability": {
            "type": "number",
            "description": "Work capacity (in hours) of the manufacturing location.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product inventory and manufacturing locations."
      },
      "ProductInventoryDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDTO"
          },
          "shelf": {
            "type": "string",
            "description": "Storage compartment within an inventory location.",
            "nullable": true
          },
          "bin": {
            "type": "integer",
            "description": "Storage container on a shelf in an inventory location.",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of products in the inventory location.",
            "format": "int32"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product inventory information."
      },
      "WorkOrderRoutingDTO": {
        "type": "object",
        "properties": {
          "workOrderId": {
            "type": "integer",
            "description": "Primary key. Foreign key to WorkOrder.WorkOrderID.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Primary key. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "operationSequence": {
            "type": "integer",
            "description": "Primary key. Indicates the manufacturing process sequence.",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "description": "Manufacturing location where the part is processed. Foreign key to Location.LocationID.",
            "nullable": true
          },
          "scheduledStartDate": {
            "type": "string",
            "description": "Planned manufacturing start date.",
            "format": "date-time"
          },
          "scheduledEndDate": {
            "type": "string",
            "description": "Planned manufacturing end date.",
            "format": "date-time"
          },
          "actualStartDate": {
            "type": "string",
            "description": "Actual start date.",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "description": "Actual end date.",
            "format": "date-time",
            "nullable": true
          },
          "actualResourceHours": {
            "type": "number",
            "description": "Number of manufacturing hours used.",
            "format": "double",
            "nullable": true
          },
          "plannedCost": {
            "type": "number",
            "description": "Estimated manufacturing cost.",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "description": "Actual manufacturing cost.",
            "format": "double",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Work order details."
      },
      "PersonPhoneDTO": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "description": "Business entity identification number.",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Telephone number identification number.",
            "nullable": true
          },
          "phoneNumberType": {
            "type": "string",
            "description": "Kind of phone number.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Telephone number and type of a person."
      },
      "PhoneNumberTypeDTO": {
        "type": "object",
        "properties": {
          "phoneNumberTypeId": {
            "type": "integer",
            "description": "Primary key for telephone number type records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the telephone number type",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Type of phone number of a person."
      },
      "PasswordDTO": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "format": "int32"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password for the e-mail account.",
            "nullable": true
          },
          "passwordSalt": {
            "type": "string",
            "description": "Random value concatenated with the password string before the password is hashed.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "One way hashed authentication information"
      },
      "ProductCategoryDTO": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "integer",
            "description": "Primary key for ProductCategory records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Category description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "High-level product categorization."
      },
      "ProductSubcategoryDTO": {
        "type": "object",
        "properties": {
          "productSubcategoryId": {
            "type": "integer",
            "description": "Primary key for ProductSubcategory records.",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "Product category identification number. Foreign key to ProductCategory.ProductCategoryID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Subcategory description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product subcategories. See ProductCategory table."
      },
      "ProductCostHistoryDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Product cost start date.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Product cost end date.",
            "format": "date-time",
            "nullable": true
          },
          "standardCost": {
            "type": "number",
            "description": "Standard cost of the product.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Changes in the cost of a product over time."
      },
      "ProductListPriceHistoryDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "List price start date.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "List price end date",
            "format": "date-time",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "description": "Product list price.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Changes in the list price of a product over time."
      },
      "ProductModelDTO": {
        "type": "object",
        "properties": {
          "productModelId": {
            "type": "integer",
            "description": "Primary key for ProductModel records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Product model description.",
            "nullable": true
          },
          "catalogDescription": {
            "type": "string",
            "description": "Detailed product catalog information in xml format.",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "description": "Manufacturing instructions in xml format.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product model classification."
      },
      "ProductPhotoDTO": {
        "type": "object",
        "properties": {
          "productPhotoId": {
            "type": "integer",
            "description": "Primary key for ProductPhoto records.",
            "format": "int32"
          },
          "thumbNailPhoto": {
            "type": "string",
            "description": "Small image of the product.",
            "nullable": true
          },
          "thumbnailPhotoFileName": {
            "type": "string",
            "description": "Small image file name.",
            "nullable": true
          },
          "largePhoto": {
            "type": "string",
            "description": "Large image of the product.",
            "nullable": true
          },
          "largePhotoFileName": {
            "type": "string",
            "description": "Large image file name.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Product images."
      },
      "ProductReviewDTO": {
        "type": "object",
        "properties": {
          "productReviewId": {
            "type": "integer",
            "description": "Primary key for ProductReview records.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "reviewerName": {
            "type": "string",
            "description": "Name of the reviewer.",
            "nullable": true
          },
          "reviewDate": {
            "type": "string",
            "description": "Date review was submitted.",
            "format": "date-time"
          },
          "emailAddress": {
            "type": "string",
            "description": "Reviewer's e-mail address.",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "description": "Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "description": "Reviewer's comments",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Customer reviews of products they have purchased."
      },
      "ProductVendorDTO": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Primary key. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "vendorId": {
            "type": "integer",
            "description": "Primary key. Foreign key to Vendor.BusinessEntityID.",
            "format": "int32"
          },
          "averageLeadTime": {
            "type": "integer",
            "description": "The average span of time (in days) between placing an order with the vendor and receiving the purchased product.",
            "format": "int32"
          },
          "standardPrice": {
            "type": "number",
            "description": "The vendor's usual selling price.",
            "format": "double"
          },
          "lastReceiptCost": {
            "type": "number",
            "description": "The selling price when last purchased.",
            "format": "double",
            "nullable": true
          },
          "lastReceiptDate": {
            "type": "string",
            "description": "Date the product was last received by the vendor.",
            "format": "date-time",
            "nullable": true
          },
          "minOrderQuantity": {
            "type": "integer",
            "description": "The maximum quantity that should be ordered.",
            "format": "int32"
          },
          "maxOrderQuantity": {
            "type": "integer",
            "description": "The minimum quantity that should be ordered.",
            "format": "int32"
          },
          "onOrderQuantity": {
            "type": "integer",
            "description": "The quantity currently on order.",
            "format": "int32",
            "nullable": true
          },
          "measurementUnit": {
            "type": "string",
            "description": "The product's unit of measure.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Cross-reference table mapping vendors with the products they supply."
      },
      "PurchaseOrderDetailDTO": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "description": "Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.",
            "format": "int32"
          },
          "purchaseOrderDetailId": {
            "type": "integer",
            "description": "Primary key. One line number per purchased product.",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "description": "Date the product is expected to be received.",
            "format": "date-time"
          },
          "orderQuantity": {
            "type": "integer",
            "description": "Quantity ordered.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "Vendor's selling price of a single product.",
            "format": "double"
          },
          "lineTotal": {
            "type": "number",
            "description": "Per product subtotal. Computed as OrderQty * UnitPrice.",
            "format": "double"
          },
          "receivedQuantity": {
            "type": "number",
            "description": "Quantity actually received from the vendor.",
            "format": "double"
          },
          "rejectedQuantity": {
            "type": "number",
            "description": "Quantity rejected during inspection.",
            "format": "double"
          },
          "stockedQuantity": {
            "type": "number",
            "description": "Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Individual products associated with a specific purchase order. See PurchaseOrderHeader."
      },
      "ShoppingCartItemDTO": {
        "type": "object",
        "properties": {
          "shoppingCartItemId": {
            "type": "integer",
            "description": "Primary key for ShoppingCartItem records.",
            "format": "int32"
          },
          "shoppingCartId": {
            "type": "string",
            "description": "Shopping cart identification number.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Product quantity ordered.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product ordered. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "description": "Date the time the record was created.",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Contains online customer orders until the order is submitted or cancelled."
      },
      "SpecialOfferDTO": {
        "type": "object",
        "properties": {
          "specialOfferId": {
            "type": "integer",
            "description": "Primary key for SpecialOffer records.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Discount description.",
            "nullable": true
          },
          "percentDiscount": {
            "type": "number",
            "description": "Discount precentage.",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "Discount type category.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Group the discount applies to such as Reseller or Customer.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Discount start date.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Discount end date.",
            "format": "date-time"
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "Minimum discount percent allowed.",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "Maximum discount percent allowed.",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Sale discounts lookup table."
      },
      "TransactionDTO": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "description": "Primary key for TransactionHistory records.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "referenceOrderId": {
            "type": "integer",
            "description": "Purchase order, sales order, or work order identification number.",
            "format": "int32"
          },
          "referenceOrderLineId": {
            "type": "integer",
            "description": "Line number associated with the purchase order, sales order, or work order.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "Date and time of the transaction.",
            "format": "date-time"
          },
          "transactionType": {
            "type": "string",
            "description": "W = WorkOrder, S = SalesOrder, P = PurchaseOrder",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Product quantity.",
            "format": "int32"
          },
          "actualCost": {
            "type": "number",
            "description": "Product cost.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Record of each purchase order, sales order, or work order transaction year to date."
      },
      "WorkOrderDTO": {
        "type": "object",
        "properties": {
          "workOrderId": {
            "type": "integer",
            "description": "Primary key for WorkOrder records.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product identification number. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "orderQuantity": {
            "type": "integer",
            "description": "Product quantity to build.",
            "format": "int32"
          },
          "stockedQuantity": {
            "type": "integer",
            "description": "Quantity built and put in inventory.",
            "format": "int32"
          },
          "scrappedQuantity": {
            "type": "integer",
            "description": "Quantity that failed inspection.",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Work order start date.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Work order end date.",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Work order due date.",
            "format": "date-time"
          },
          "scrapReason": {
            "type": "string",
            "description": "Reason for inspection failure.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Manufacturing work orders."
      },
      "ProductDetailDTO": {
        "type": "object",
        "properties": {
          "modelInfo": {
            "$ref": "#/components/schemas/ProductModelDTO"
          },
          "billOfMaterialComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillOfMaterialDTO"
            },
            "nullable": true
          },
          "billOfMaterialProductAssemblies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillOfMaterialDTO"
            },
            "nullable": true
          },
          "productCostHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCostHistoryDTO"
            },
            "nullable": true
          },
          "productInventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInventoryDTO"
            },
            "nullable": true
          },
          "productListPriceHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListPriceHistoryDTO"
            },
            "nullable": true
          },
          "productPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPhotoDTO"
            },
            "nullable": true
          },
          "productReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewDTO"
            },
            "nullable": true
          },
          "productVendors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVendorDTO"
            },
            "nullable": true
          },
          "purchaseOrderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderDetailDTO"
            },
            "nullable": true
          },
          "shoppingCartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingCartItemDTO"
            },
            "nullable": true
          },
          "specialOffers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialOfferDTO"
            },
            "nullable": true
          },
          "transactionHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDTO"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderDTO"
            },
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Primary key for Product records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the product.",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "Unique product identification number.",
            "nullable": true
          },
          "isManufactured": {
            "type": "boolean",
            "description": "0 = Product is purchased, 1 = Product is manufactured in-house.",
            "nullable": true
          },
          "isSaleable": {
            "type": "boolean",
            "description": "0 = Product is not a salable item. 1 = Product is salable.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Product color.",
            "nullable": true
          },
          "safetyStockLevel": {
            "type": "integer",
            "description": "Minimum inventory quantity.",
            "format": "int32"
          },
          "reorderPoint": {
            "type": "integer",
            "description": "Inventory level that triggers a purchase order or work order.",
            "format": "int32"
          },
          "standardCost": {
            "type": "number",
            "description": "Standard cost of the product.",
            "format": "double"
          },
          "listPrice": {
            "type": "number",
            "description": "Selling price.",
            "format": "double"
          },
          "size": {
            "type": "string",
            "description": "Product size.",
            "nullable": true
          },
          "sizeUnit": {
            "type": "string",
            "description": "Unit of measure for Size column.",
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "description": "Unit of measure for Weight column.",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Product weight.",
            "format": "double",
            "nullable": true
          },
          "daysToManufacture": {
            "type": "integer",
            "description": "Number of days required to manufacture the product.",
            "format": "int32"
          },
          "productLine": {
            "type": "string",
            "description": "R = Road, M = Mountain, T = Touring, S = Standard",
            "nullable": true
          },
          "class": {
            "type": "string",
            "description": "H = High, M = Medium, L = Low",
            "nullable": true
          },
          "style": {
            "type": "string",
            "description": "W = Womens, M = Mens, U = Universal",
            "nullable": true
          },
          "subcategory": {
            "type": "string",
            "description": "Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "Product is a member of this product model. Foreign key to ProductModel.ProductModelID.",
            "nullable": true
          },
          "sellStartDate": {
            "type": "string",
            "description": "Date the product was available for sale.",
            "format": "date-time"
          },
          "sellEndDate": {
            "type": "string",
            "description": "Date the product was no longer available for sale.",
            "format": "date-time",
            "nullable": true
          },
          "discontinuedDate": {
            "type": "string",
            "description": "Date the product was discontinued.",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Products sold or used in the manfacturing of sold products."
      },
      "ShipMethodDTO": {
        "type": "object",
        "properties": {
          "shipMethodId": {
            "type": "integer",
            "description": "Primary key for ShipMethod records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Shipping company name.",
            "nullable": true
          },
          "shipBase": {
            "type": "number",
            "description": "Minimum shipping charge.",
            "format": "double"
          },
          "shipRate": {
            "type": "number",
            "description": "Shipping charge per pound.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Shipping company lookup table."
      },
      "SalesOrderDetailDTO": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Primary key. Foreign key to SalesOrderHeader.SalesOrderID.",
            "format": "int32"
          },
          "salesOrderDetailId": {
            "type": "integer",
            "description": "Primary key. One incremental unique number per product sold.",
            "format": "int32"
          },
          "carrierTrackingNumber": {
            "type": "string",
            "description": "Shipment tracking number supplied by the shipper.",
            "nullable": true
          },
          "orderQuantity": {
            "type": "integer",
            "description": "Quantity ordered per product.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product sold to customer. Foreign key to Product.ProductID.",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "specialOfferId": {
            "type": "integer",
            "description": "Promotional code. Foreign key to SpecialOffer.SpecialOfferID.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "Selling price of a single product.",
            "format": "double"
          },
          "unitPriceDiscount": {
            "type": "number",
            "description": "Discount amount.",
            "format": "double"
          },
          "lineTotal": {
            "type": "number",
            "description": "Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Individual products associated with a specific sales order. See SalesOrderHeader."
      },
      "SalesPersonDTO": {
        "type": "object",
        "properties": {
          "salesPersonId": {
            "type": "integer",
            "description": "Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID",
            "format": "int32"
          },
          "territory": {
            "type": "string",
            "description": "Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.",
            "nullable": true
          },
          "salesQuota": {
            "type": "number",
            "description": "Projected yearly sales.",
            "format": "double",
            "nullable": true
          },
          "bonus": {
            "type": "number",
            "description": "Bonus due if quota is met.",
            "format": "double"
          },
          "percentCommision": {
            "type": "number",
            "description": "Commision percent received per sale.",
            "format": "double"
          },
          "salesYtd": {
            "type": "number",
            "description": "Sales total year to date.",
            "format": "double"
          },
          "salesLastYear": {
            "type": "number",
            "description": "Sales total of previous year.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Sales representative current information."
      },
      "SalesReasonDTO": {
        "type": "object",
        "properties": {
          "salesReasonId": {
            "type": "integer",
            "description": "Primary key for SalesReason records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Sales reason description.",
            "nullable": true
          },
          "reasonType": {
            "type": "string",
            "description": "Category the sales reason belongs to.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Lookup table of customer purchase reasons."
      },
      "SalesOrderHeaderDetailDTO": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Primary key.",
            "format": "int32"
          },
          "revisionNumber": {
            "type": "integer",
            "description": "Incremental number to track changes to the sales order over time.",
            "format": "int32"
          },
          "orderDate": {
            "type": "string",
            "description": "Dates the sales order was created.",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "description": "Date the order is due to the customer.",
            "format": "date-time"
          },
          "shipDate": {
            "type": "string",
            "description": "Date the order was shipped to the customer.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled",
            "nullable": true
          },
          "isOrderedOnline": {
            "type": "boolean",
            "description": "0 = Order placed by sales person. 1 = Order placed online by customer.",
            "nullable": true
          },
          "salesOrderNumber": {
            "type": "string",
            "description": "Unique sales order identification number.",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Customer purchase order number reference.",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "Financial accounting number reference.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerDTO"
          },
          "salesPerson": {
            "$ref": "#/components/schemas/SalesPersonDTO"
          },
          "territory": {
            "$ref": "#/components/schemas/SalesTerritoryDTO"
          },
          "billToAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "shipToAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "shipMethod": {
            "$ref": "#/components/schemas/ShipMethodDTO"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardDTO"
          },
          "creditCardApprovalCode": {
            "type": "string",
            "description": "Approval code provided by the credit card company.",
            "nullable": true
          },
          "currencyRate": {
            "$ref": "#/components/schemas/CurrencyRateDTO"
          },
          "subTotal": {
            "type": "number",
            "description": "Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "description": "Tax amount.",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Shipping cost.",
            "format": "double"
          },
          "totalDue": {
            "type": "number",
            "description": "Total due from customer. Computed as Subtotal + TaxAmt + Freight.",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "description": "Sales representative comments.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          },
          "salesOrderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesOrderDetailDTO"
            },
            "nullable": true
          },
          "salesReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesReasonDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "General sales order information."
      },
      "SalesPersonQuotaHistoryDTO": {
        "type": "object",
        "properties": {
          "salesPersonId": {
            "type": "integer",
            "description": "Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.",
            "format": "int32"
          },
          "quotaDate": {
            "type": "string",
            "description": "Sales quota date.",
            "format": "date-time"
          },
          "salesQuota": {
            "type": "number",
            "description": "Sales quota amount.",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Sales performance tracking."
      },
      "SalesTerritoryHistoryDTO": {
        "type": "object",
        "properties": {
          "salesPersonId": {
            "type": "integer",
            "description": "Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.",
            "format": "int32"
          },
          "territoryId": {
            "type": "integer",
            "description": "Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Primary key. Date the sales representive started work in the territory.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Date the sales representative left work in the territory.",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Sales representative transfers to other sales territories."
      },
      "SalesTaxRateDTO": {
        "type": "object",
        "properties": {
          "salesTaxRateId": {
            "type": "integer",
            "description": "Primary key for SalesTaxRate records.",
            "format": "int32"
          },
          "stateProvince": {
            "$ref": "#/components/schemas/StateProvinceDTO"
          },
          "taxType": {
            "type": "string",
            "description": "1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "description": "Tax rate amount.",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "Tax rate description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Tax rate lookup table."
      },
      "ScrapReasonDTO": {
        "type": "object",
        "properties": {
          "scrapReasonId": {
            "type": "integer",
            "description": "Primary key for ScrapReason records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Failure description.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Manufacturing failure reasons lookup table."
      },
      "ShiftDTO": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "description": "Primary key for Shift records.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Shift description.",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "Shift start time.",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "Shift end time.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Work shift lookup table."
      },
      "BusinessEntityDetailDTO": {
        "type": "object",
        "properties": {
          "businessEntityID": {
            "type": "integer",
            "format": "int32"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessEntityAddressDTO"
            },
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessEntityContactDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VendorDetailDTO": {
        "type": "object",
        "properties": {
          "businessEntity": {
            "$ref": "#/components/schemas/BusinessEntityDetailDTO"
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderHeaderDTO"
            },
            "nullable": true
          },
          "productVendors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVendorDTO"
            },
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "description": "Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string",
            "description": "Vendor account (identification) number.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Company name.",
            "nullable": true
          },
          "creditRating": {
            "type": "string",
            "description": "1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average",
            "nullable": true
          },
          "isPreferred": {
            "type": "boolean",
            "description": "0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "0 = Vendor no longer used. 1 = Vendor is actively used.",
            "nullable": true
          },
          "purchasingWebServiceUrl": {
            "type": "string",
            "description": "Vendor URL.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time the record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}